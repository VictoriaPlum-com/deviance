<!doctype html>
<html>
<head>
    <title>Test Results</title>
    <meta charset="utf-8">
    <link rel="shortcut icon" href="">
    <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic">
    <link rel="stylesheet" href="//cdn.rawgit.com/necolas/normalize.css/master/normalize.css">
    <link rel="stylesheet" href="//cdn.rawgit.com/milligram/milligram/master/dist/milligram.min.css">
    <style>
        img {
            max-width: 100%;
        }
        li {
            list-style: none;
        }
        li.approved p.success {
            margin-bottom: 5px;
        }
        li.approved .row {
            display: none;
        }
        p.fail::before {
            content: "✖"
        }
        p.success::before {
            content: "✔"
        }
        p.errors::before {
            content: "!"
        }
        p.success {
            color: #09B257;
        }
        p.fail {
            color: #FF1100;
        }
        p.approval-msg {
            color: #6D0CA7;
            margin-left: 2em;
        }
        .vrt-output .column {
            border: 0.1rem solid #e1e1e1;
        }
        .header-container {
            background: #6D0CA7;
            color: white;
            padding: 2em;
        }
        .header-container .button {
            margin-right: 5px;
        }
        .body-container {
            margin-top: 2em;
        }
    
        section {
            padding: 40px 0;
            border-bottom: 1px solid darkgrey;
        }
        .toggle-skipped {
            margin-right: 5px;
        }
        label {
            display: inline;
            font-weight: 400;
        }
        .button.button-outline-light {
            color: #FFF;
        }
        .button.button-outline-light:hover {
            color: #FFF;
            border-color: #FFF;
        }

        .show-passed section.success *.fail,
        .show-passed section.success *.errors.show-errors {
            display: none;
        }

        .show-errors section.errors *.success,
        .show-errors section.errors *.fail,
        .show-errors section.fail, 
        .show-errors section.success {
            display: none;
        }

        .show-failed section.fail *.success,
        .show-failed section.fail *.error,
        .show-failed section.success,
        .show-failed section.errors {
            display: none;
        }
        .show-failed section.fail,
        .show-passed section.success,
        .show-errors section.errors {
            display: block;
        }
        .hide-skipped section.skipped {
            display: none;
        }
        .error-msg {
            padding: .75rem 1.25rem;
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
        }
    </style>
</head>
<body>
    <div class="header-container">
        <div class="container">
            <h1>Deviance report</h1>
            <header>
                <span id="all" class="toggle-body-content button button-outline-light">Show All</span>
                <span id="passed" class="toggle-body-content button button-outline button-outline-light">{{results.passed}} passed</span>
                <span id="errors" class="toggle-body-content button button-outline button-outline-light">{{results.errors}} errors</span>
                <span id="failed" class="toggle-body-content button button-outline button-outline-light">{{results.failed}} failures</span>
                <div class="float-right">
                    <input id="show-skipped" type="checkbox" class="toggle-skipped" checked />
                    <label for="show-skipped">Show skipped</label>
                </div>
            </header>
        </div>
    </div>

    <div class="container body-container">
        {{#each results.modules}}
            <section>
                <h2>{{@key}} {{#if skipped}}<small>(skipped)</small>{{/if}}</h2>

                {{#if htmlErrorMsgs}}
                    <h4 class="errors">The following errors have occured and need addressing for all tests to run: </h4>
                    <ul>
                        {{#each htmlErrorMsgs}}
                        <li class="error-msg">
                            {{{ this }}}
                        </li>
                        {{/each}}
                    </ul>
                {{/if}}

                {{#each completed}}
                    <h3>{{@key}}</h3>

                    <ul>
                        {{#each assertions}}
                            <li class="assertion {{#if failure}}fail{{else}}success{{/if}}" id="section-{{devianceId}}">
                                <p class="{{#if failure}}fail{{else}}success{{/if}}">
                                    {{message}} {{#if failure}} - {{failure}}{{/if}}
                                </p>

                                {{#if stacktrace}}
                                    <code><pre>{{stacktrace}}</pre></code>
                                {{/if}}

                                {{#if failure}}
                                     {{#if devianceFilePath.diff}}
                                        <div class="row vrt-output">
                                            <div class="column column-33 to-remove">
                                                <img src="{{ devianceFilePath.expected }}">
                                            </div>
                                            <div class="column column-33 to-remove">
                                                <img src="{{ devianceFilePath.diff }}">
                                            </div>
                                            <div class="column column-33">
                                                <img src="{{ devianceFilePath.actual }}">
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="column column-33 column-offset-66" style="text-align:center">
                                                <button class="i-approve" data-id="{{ devianceId }}">Approve change</button>
                                            </div>
                                        </div>
                                     {{/if}}
                                 {{/if}}

                                {{#if isNewDeviance}}
                                    <div class="row vrt-output">
                                        <div class="column column-33 to-remove"></div>
                                        <div class="column column-33 to-remove"></div>
                                        <div class="column column-33">
                                            <img src="{{ devianceFilePath.actual }}">
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="column column-33 column-offset-66" style="text-align:center">
                                            <button class="i-approve" data-id="{{ devianceId }}">Approve change</button>
                                        </div>
                                    </div>
                                {{/if}}

                                {{#if isPassedDeviance}}
                                    <div class="row vrt-output">
                                        <div class="column column-33 to-remove">
                                            <img src="{{ devianceFilePath.expected }}">
                                        </div>
                                        <div class="column column-33 to-remove">
                                            <img src="{{ devianceFilePath.diff }}">
                                        </div>
                                        <div class="column column-33">
                                            <img src="{{ devianceFilePath.actual }}">
                                        </div>
                                    </div>
                                {{/if}}
                            </li>
                        {{/each}}
                    </ul>

                    

                    {{#if failed}}
                        <p class="fail"> <strong>FAILED:</strong> {{failed}} assertions failed.</p>
                        <p class="success"> {{passed}} passed. ({{time}}s)</p>
                    {{else if errors}}
                        <p class="errors">
                            <strong>Error:</strong> {{errors}} assertions failed to run.
                        </p>
                    {{else}}
                        <p class="success"><strong>OK.</strong> {{passed}} assertions passed. ({{time}}s)</p>
                    {{/if}}
                {{/each}}

                {{#if skipped}}
                    <ul class="skipped">
                        {{#each skipped}}
                            <li>{{this}} (skipped)</li>
                        {{/each}}
                    </ul>
                {{/if}}
            </section>
        {{/each}}
    </div>
    <script>
        document.querySelectorAll('.i-approve').forEach(button => {
            const id = button.getAttribute('data-id');
            button.addEventListener('click', () => {
                fetch('/approve', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json; charset=utf-8",
                    },
                    body: JSON.stringify({id}),
                }).then(() => {
                    const approvedSection = document.getElementById(`section-${id}`);
                    approvedSection.classList.add('approved');
                    const approvalMsg = document.createElement('p');
                    approvalMsg.classList.add('approval-msg');
                    approvalMsg.innerHTML = '✔ Visual change accepted';
                    approvedSection.appendChild(approvalMsg);
                });
            });
        });

        const sectionElements = document.querySelectorAll('section');
        sectionElements.forEach(section => {
            section.childNodes.forEach(el => {
                if (el.classList && el.classList.length > 0) {
                    section.classList.add(el.classList.value);
                }
            })
        });

        const bodyContainer = document.querySelector('.body-container');

        const toggleSkipped = document.querySelector('#show-skipped');
        toggleSkipped.addEventListener('change', (e) => {
            bodyContainer.classList.toggle('hide-skipped');
        })

        const toggleContentSwitches = document.querySelectorAll('.toggle-body-content');
        const switchIds = [];
        toggleContentSwitches.forEach(cs => {
            switchIds.push(cs.id);
            cs.addEventListener('click', (e) => {
                e.target.classList.remove('button-outline');
                switchIds.forEach(sid => bodyContainer.classList.remove(`show-${sid}`));
                bodyContainer.classList.add(`show-${e.target.id}`);
                [...e.target.parentElement.children].filter(c => c !== e.target).forEach(el => el.classList.add('button-outline'));
            });
        });
        
        window.addEventListener('unload', terminateServer);

        function terminateServer() {
            fetch('/terminate', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json; charset=utf-8",
                },
                body: JSON.stringify({}),
            });
        };
    </script>
</body>
</html>