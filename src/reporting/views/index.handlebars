<!doctype html>
<html>
<head>
    <title>Test Results</title>
    <meta charset="utf-8">
    <link rel="shortcut icon" href="">
    <link rel="stylesheet" href="//fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic">
    <link rel="stylesheet" href="//cdn.rawgit.com/necolas/normalize.css/master/normalize.css">
    <link rel="stylesheet" href="//cdn.rawgit.com/milligram/milligram/master/dist/milligram.min.css">
    <link rel="stylesheet" href="/viewerjs/viewer.min.css">
    <style>
        html {
            font-size: 62.5%;
        }
        body {
            font-size: 1.6rem;
        }
        img {
            max-width: 100%;
            cursor: zoom-in;
        }
        li {
            list-style: none;
        }
        li.approved p.success {
            margin-bottom: 1.5rem;
        }
        li.approved .row {
            display: none;
        }
        p {
            margin: 2.5rem 0 0 0;
        }
        p.fail::before {
            content: "✖"
        }
        p.approved::before {
            content: "⚠"
        }
        p.success::before {
            content: "✔"
        }
        p.errors::before {
            content: "!"
        }
        p.success {
            color: #09B257;
        }
        p.fail {
            color: #FF1100;
        }
        p.approved {
            color: #FF7F50;
        }
        p.approval-msg {
            color: #6D0CA7;
            margin: 0 2rem;
        }
        .vrt-output .column {
            border: 0.1rem solid #e1e1e1;
        }
        .header-container {
            background: #6D0CA7;
            color: white;
            padding: 2rem;
        }
        .header-container .button {
            margin-right: 0.5rem;
        }
        .body-container {
            margin-top: 2rem;
        }

        section.testgroup {
            padding: 4rem 0;
            border-bottom: 0.1rem solid darkgrey;
        }
        .toggle-skipped {
            margin-right: 0.5rem;
        }
        label {
            display: inline;
            font-weight: 400;
        }
        .button.button-outline-light {
            color: #FFF;
        }
        .button.button-outline-light:hover {
            color: #FFF;
            border-color: #FFF;
        }
        .column.approve-button {
            text-align: right;
            padding: 0;
        }
        .column.approve-button button {
            margin: 0.3rem;
        }

        .show-passed section.testsingle:not(.success),
        .show-passed section.testgroup:not(.has-passed),
        .show-errors section.testsingle:not(.error),
        .show-errors section.testgroup:not(.has-errors),
        .show-failed section.testsingle:not(.fail),
        .show-failed section.testgroup:not(.has-failed) {
            display: none;
        }

        .hide-skipped section.skipped {
            display: none;
        }

        .error-msg {
            padding: .75rem 1.25rem;
            color: #721c24;
            background-color: #f8d7da;
            border-color: #f5c6cb;
        }
    </style>
</head>
<body>
    <div class="header-container">
        <div class="container">
            <h1>Deviance report</h1>
            <header>
                <span id="all" class="toggle-body-content button button-outline-light">Show All</span>
                <span id="passed" class="toggle-body-content button button-outline button-outline-light">{{results.passed}} passed</span>
                <span id="errors" class="toggle-body-content button button-outline button-outline-light">{{results.errors}} errors</span>
                <span id="failed" class="toggle-body-content button button-outline button-outline-light">{{results.failed}} failures</span>
                <div class="float-right">
                    <input id="show-skipped" type="checkbox" class="toggle-skipped" checked />
                    <label for="show-skipped">Show skipped</label>
                </div>
            </header>
        </div>
    </div>

    <div class="container body-container">
        {{#each results.modules}}
            <section class="testgroup{{#if skippedCount}} has-skipped{{/if}}{{#if failedCount}} has-failed{{/if}}{{#if errorsCount}} has-errors{{/if}}{{#if passedCount}} has-passed{{/if}}">
                <h2>{{@key}} {{#if skipped}}<small>(skipped)</small>{{/if}}</h2>

                {{#each completed}}
                    <section class="testsingle">
                        <h3>{{@key}}</h3>

                        <ul>
                            {{#each assertions}}
                                <li class="assertion {{#if failure}}fail{{else}}success{{/if}}" id="section-{{devianceId}}">
                                    <p class="{{#if failure}}fail{{else}}success{{/if}} i-can-be-approved">
                                        {{message}} {{#if failure}} - {{failure}}{{/if}}
                                    </p>

                                    {{#if stacktrace}}
                                        <code><pre>{{stacktrace}}</pre></code>
                                    {{/if}}

                                    {{#if failure}}
                                        {{#if devianceFilePath.diff}}
                                            <div class="row vrt-output">
                                                <div class="column column-33 to-remove">
                                                    <img src="{{ devianceFilePath.expected }}">
                                                </div>
                                                <div class="column column-33 to-remove">
                                                    <img src="{{ devianceFilePath.diff }}">
                                                </div>
                                                <div class="column column-33">
                                                    <img src="{{ devianceFilePath.actual }}">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="approve-button column column-33 column-offset-66">
                                                    <button class="i-approve" data-id="{{ devianceId }}">Approve change</button>
                                                </div>
                                            </div>
                                        {{/if}}
                                    {{/if}}

                                    {{#if isNewDeviance}}
                                        <div class="row vrt-output">
                                            <div class="column column-33 to-remove"></div>
                                            <div class="column column-33 to-remove"></div>
                                            <div class="column column-33">
                                                <img src="{{ devianceFilePath.actual }}">
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="approve-button column column-33 column-offset-66">
                                                <button class="i-approve" data-id="{{ devianceId }}">Approve change</button>
                                            </div>
                                        </div>
                                    {{/if}}

                                    {{#if isPassedDeviance}}
                                        <div class="row vrt-output">
                                            <div class="column column-33 to-remove">
                                                <img src="{{ devianceFilePath.expected }}">
                                            </div>
                                            <div class="column column-33 to-remove">
                                                <img src="{{ devianceFilePath.diff }}">
                                            </div>
                                            <div class="column column-33">
                                                <img src="{{ devianceFilePath.actual }}">
                                            </div>
                                        </div>
                                    {{/if}}

                                    {{#each screenshots}}
                                        <div class="row">
                                            <img src="{{ this }}">
                                        </div>
                                    {{/each}}
                                </li>
                            {{/each}}
                        </ul>
                        {{#if failed}}
                            <p class="fail"><strong>FAILED:</strong> {{failed}} assertions failed. {{passed}} passed. ({{time}}s)</p>
                        {{else if errors}}
                            {{#if ../htmlErrorMsgs}}
                                <h4 class="errors">The following errors have occurred and need addressing for all tests to run: </h4>
                                <ul>
                                    {{#each ../htmlErrorMsgs}}
                                        <li class="error-msg">
                                            {{{ this }}}
                                        </li>
                                    {{/each}}
                                </ul>
                            {{/if}}

                            <p class="error"><strong>Error:</strong> {{errors}} assertions failed to run.</p>
                        {{else}}
                            <p class="success"><strong>OK.</strong> {{passed}} assertions passed. ({{time}}s)</p>
                        {{/if}}
                    </section>
                {{/each}}

                {{#if skipped}}
                    <ul class="skipped">
                        {{#each skipped}}
                            <li>{{this}} (skipped)</li>
                        {{/each}}
                    </ul>
                {{/if}}

            </section>
        {{/each}}
    </div>
    <script src="/viewerjs/viewer.min.js"></script>
    <script>
        document.querySelectorAll('.i-approve').forEach(button => {
            const id = button.getAttribute('data-id');
            button.addEventListener('click', () => {
                fetch('/approve', {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json; charset=utf-8",
                    },
                    body: JSON.stringify({id}),
                }).then(() => {
                    const approvedSection = document.getElementById(`section-${id}`);
                    const state = approvedSection.getElementsByClassName('i-can-be-approved')[0];
                    state.classList.remove('success', 'fail');
                    state.classList.add('approved');
                    const text = document.createTextNode(state.innerText);
                    const del = document.createElement('del');
                    del.appendChild(text);
                    state.innerHTML = del.outerHTML;
                    approvedSection.classList.add('approved');
                    const approvalMsg = document.createElement('p');
                    approvalMsg.classList.add('approval-msg');
                    approvalMsg.innerHTML = '✔ Visual change accepted';
                    approvedSection.appendChild(approvalMsg);
                });
            });
        });

        const sectionElements = document.querySelectorAll('section.testsingle');
        sectionElements.forEach(section => {
            section.childNodes.forEach(el => {
                if (el.classList && el.classList.length > 0) {
                    section.classList.add(el.classList.value);
                }
            })
        });

        const bodyContainer = document.querySelector('.body-container');
        const toggleSkipped = document.querySelector('#show-skipped');
        toggleSkipped.addEventListener('change', (e) => {
            bodyContainer.classList.toggle('hide-skipped');
        });

        const toggleContentSwitches = document.querySelectorAll('.toggle-body-content');
        const switchIds = [];
        toggleContentSwitches.forEach(cs => {
            switchIds.push(cs.id);
            cs.addEventListener('click', (e) => {
                e.target.classList.remove('button-outline');
                switchIds.forEach(sid => bodyContainer.classList.remove(`show-${sid}`));
                bodyContainer.classList.add(`show-${e.target.id}`);
                [...e.target.parentElement.children].filter(c => c !== e.target).forEach(el => el.classList.add('button-outline'));
            });
        });

        function terminateServer() {
            fetch('/terminate', {
                method: "POST",
                headers: {
                    "Content-Type": "application/json; charset=utf-8",
                },
                body: JSON.stringify({}),
            });
        }

        window.addEventListener('unload', terminateServer);

        [...document.querySelectorAll('img')].forEach((img) => {
            new Viewer(img);
        });
    </script>
</body>
</html>
